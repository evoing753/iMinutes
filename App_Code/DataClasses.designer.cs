#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="iMinutes")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 擴充性方法定義
  partial void OnCreated();
  partial void Insertevent(@event instance);
  partial void Updateevent(@event instance);
  partial void Deleteevent(@event instance);
  partial void Insertusers(users instance);
  partial void Updateusers(users instance);
  partial void Deleteusers(users instance);
  partial void Insertmeet(meet instance);
  partial void Updatemeet(meet instance);
  partial void Deletemeet(meet instance);
  partial void Insertmeet_members(meet_members instance);
  partial void Updatemeet_members(meet_members instance);
  partial void Deletemeet_members(meet_members instance);
  partial void Insertmessages(messages instance);
  partial void Updatemessages(messages instance);
  partial void Deletemessages(messages instance);
  partial void Insertplace_schedule(place_schedule instance);
  partial void Updateplace_schedule(place_schedule instance);
  partial void Deleteplace_schedule(place_schedule instance);
  partial void Insertplaces(places instance);
  partial void Updateplaces(places instance);
  partial void Deleteplaces(places instance);
  partial void Insertuser_schedule(user_schedule instance);
  partial void Updateuser_schedule(user_schedule instance);
  partial void Deleteuser_schedule(user_schedule instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["iMinutesConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<@event> @event
	{
		get
		{
			return this.GetTable<@event>();
		}
	}
	
	public System.Data.Linq.Table<users> users
	{
		get
		{
			return this.GetTable<users>();
		}
	}
	
	public System.Data.Linq.Table<meet> meet
	{
		get
		{
			return this.GetTable<meet>();
		}
	}
	
	public System.Data.Linq.Table<meet_members> meet_members
	{
		get
		{
			return this.GetTable<meet_members>();
		}
	}
	
	public System.Data.Linq.Table<messages> messages
	{
		get
		{
			return this.GetTable<messages>();
		}
	}
	
	public System.Data.Linq.Table<place_schedule> place_schedule
	{
		get
		{
			return this.GetTable<place_schedule>();
		}
	}
	
	public System.Data.Linq.Table<places> places
	{
		get
		{
			return this.GetTable<places>();
		}
	}
	
	public System.Data.Linq.Table<user_schedule> user_schedule
	{
		get
		{
			return this.GetTable<user_schedule>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.event")]
public partial class @event : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _event_id;
	
	private string _title;
	
	private string _event_start;
	
	private string _event_end;
	
	private string _description;
	
	private EntityRef<meet> _meet;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onevent_idChanging(int value);
    partial void Onevent_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Onevent_startChanging(string value);
    partial void Onevent_startChanged();
    partial void Onevent_endChanging(string value);
    partial void Onevent_endChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
	
	public @event()
	{
		this._meet = default(EntityRef<meet>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int event_id
	{
		get
		{
			return this._event_id;
		}
		set
		{
			if ((this._event_id != value))
			{
				this.Onevent_idChanging(value);
				this.SendPropertyChanging();
				this._event_id = value;
				this.SendPropertyChanged("event_id");
				this.Onevent_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(MAX)")]
	public string title
	{
		get
		{
			return this._title;
		}
		set
		{
			if ((this._title != value))
			{
				this.OntitleChanging(value);
				this.SendPropertyChanging();
				this._title = value;
				this.SendPropertyChanged("title");
				this.OntitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_start", DbType="NVarChar(MAX)")]
	public string event_start
	{
		get
		{
			return this._event_start;
		}
		set
		{
			if ((this._event_start != value))
			{
				this.Onevent_startChanging(value);
				this.SendPropertyChanging();
				this._event_start = value;
				this.SendPropertyChanged("event_start");
				this.Onevent_startChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_end", DbType="NVarChar(MAX)")]
	public string event_end
	{
		get
		{
			return this._event_end;
		}
		set
		{
			if ((this._event_end != value))
			{
				this.Onevent_endChanging(value);
				this.SendPropertyChanging();
				this._event_end = value;
				this.SendPropertyChanged("event_end");
				this.Onevent_endChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
	public string description
	{
		get
		{
			return this._description;
		}
		set
		{
			if ((this._description != value))
			{
				this.OndescriptionChanging(value);
				this.SendPropertyChanging();
				this._description = value;
				this.SendPropertyChanged("description");
				this.OndescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="event_meet", Storage="_meet", ThisKey="event_id", OtherKey="meet_id", IsUnique=true, IsForeignKey=false)]
	public meet meet
	{
		get
		{
			return this._meet.Entity;
		}
		set
		{
			meet previousValue = this._meet.Entity;
			if (((previousValue != value) 
						|| (this._meet.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._meet.Entity = null;
					previousValue.@event = null;
				}
				this._meet.Entity = value;
				if ((value != null))
				{
					value.@event = this;
				}
				this.SendPropertyChanged("meet");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
public partial class users : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _user_id;
	
	private string _user_mail;
	
	private string _user_pwd;
	
	private System.Nullable<bool> _user_pwd_change_status;
	
	private string _user_name;
	
	private string _user_phone;
	
	private System.Nullable<bool> _isAdmin;
	
	private string _personal_space;
	
	private string _organization;
	
	private EntitySet<meet_members> _meet_members;
	
	private EntitySet<user_schedule> _user_schedule;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onuser_mailChanging(string value);
    partial void Onuser_mailChanged();
    partial void Onuser_pwdChanging(string value);
    partial void Onuser_pwdChanged();
    partial void Onuser_pwd_change_statusChanging(System.Nullable<bool> value);
    partial void Onuser_pwd_change_statusChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onuser_phoneChanging(string value);
    partial void Onuser_phoneChanged();
    partial void OnisAdminChanging(System.Nullable<bool> value);
    partial void OnisAdminChanged();
    partial void Onpersonal_spaceChanging(string value);
    partial void Onpersonal_spaceChanged();
    partial void OnorganizationChanging(string value);
    partial void OnorganizationChanged();
    #endregion
	
	public users()
	{
		this._meet_members = new EntitySet<meet_members>(new Action<meet_members>(this.attach_meet_members), new Action<meet_members>(this.detach_meet_members));
		this._user_schedule = new EntitySet<user_schedule>(new Action<user_schedule>(this.attach_user_schedule), new Action<user_schedule>(this.detach_user_schedule));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_mail", DbType="NVarChar(MAX)")]
	public string user_mail
	{
		get
		{
			return this._user_mail;
		}
		set
		{
			if ((this._user_mail != value))
			{
				this.Onuser_mailChanging(value);
				this.SendPropertyChanging();
				this._user_mail = value;
				this.SendPropertyChanged("user_mail");
				this.Onuser_mailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_pwd", DbType="NVarChar(MAX)")]
	public string user_pwd
	{
		get
		{
			return this._user_pwd;
		}
		set
		{
			if ((this._user_pwd != value))
			{
				this.Onuser_pwdChanging(value);
				this.SendPropertyChanging();
				this._user_pwd = value;
				this.SendPropertyChanged("user_pwd");
				this.Onuser_pwdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_pwd_change_status", DbType="Bit")]
	public System.Nullable<bool> user_pwd_change_status
	{
		get
		{
			return this._user_pwd_change_status;
		}
		set
		{
			if ((this._user_pwd_change_status != value))
			{
				this.Onuser_pwd_change_statusChanging(value);
				this.SendPropertyChanging();
				this._user_pwd_change_status = value;
				this.SendPropertyChanged("user_pwd_change_status");
				this.Onuser_pwd_change_statusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(MAX)")]
	public string user_name
	{
		get
		{
			return this._user_name;
		}
		set
		{
			if ((this._user_name != value))
			{
				this.Onuser_nameChanging(value);
				this.SendPropertyChanging();
				this._user_name = value;
				this.SendPropertyChanged("user_name");
				this.Onuser_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_phone", DbType="NVarChar(MAX)")]
	public string user_phone
	{
		get
		{
			return this._user_phone;
		}
		set
		{
			if ((this._user_phone != value))
			{
				this.Onuser_phoneChanging(value);
				this.SendPropertyChanging();
				this._user_phone = value;
				this.SendPropertyChanged("user_phone");
				this.Onuser_phoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isAdmin", DbType="Bit")]
	public System.Nullable<bool> isAdmin
	{
		get
		{
			return this._isAdmin;
		}
		set
		{
			if ((this._isAdmin != value))
			{
				this.OnisAdminChanging(value);
				this.SendPropertyChanging();
				this._isAdmin = value;
				this.SendPropertyChanged("isAdmin");
				this.OnisAdminChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personal_space", DbType="NVarChar(MAX)")]
	public string personal_space
	{
		get
		{
			return this._personal_space;
		}
		set
		{
			if ((this._personal_space != value))
			{
				this.Onpersonal_spaceChanging(value);
				this.SendPropertyChanging();
				this._personal_space = value;
				this.SendPropertyChanged("personal_space");
				this.Onpersonal_spaceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organization", DbType="NVarChar(MAX)")]
	public string organization
	{
		get
		{
			return this._organization;
		}
		set
		{
			if ((this._organization != value))
			{
				this.OnorganizationChanging(value);
				this.SendPropertyChanging();
				this._organization = value;
				this.SendPropertyChanged("organization");
				this.OnorganizationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="users_meet_members", Storage="_meet_members", ThisKey="user_id", OtherKey="user_id")]
	public EntitySet<meet_members> meet_members
	{
		get
		{
			return this._meet_members;
		}
		set
		{
			this._meet_members.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="users_user_schedule", Storage="_user_schedule", ThisKey="user_id", OtherKey="user_id")]
	public EntitySet<user_schedule> user_schedule
	{
		get
		{
			return this._user_schedule;
		}
		set
		{
			this._user_schedule.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_meet_members(meet_members entity)
	{
		this.SendPropertyChanging();
		entity.users = this;
	}
	
	private void detach_meet_members(meet_members entity)
	{
		this.SendPropertyChanging();
		entity.users = null;
	}
	
	private void attach_user_schedule(user_schedule entity)
	{
		this.SendPropertyChanging();
		entity.users = this;
	}
	
	private void detach_user_schedule(user_schedule entity)
	{
		this.SendPropertyChanging();
		entity.users = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.meet")]
public partial class meet : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _meet_id;
	
	private string _meet_title;
	
	private string _start_time;
	
	private string _end_time;
	
	private int _meet_place;
	
	private System.Nullable<int> _numofmembers;
	
	private string _meet_uploadfile;
	
	private string _meet_recordfile;
	
	private string _meet_chattext;
	
	private string _meet_note;
	
	private System.Nullable<int> _status;
	
	private string _meet_code;
	
	private string _convener;
	
	private EntitySet<meet_members> _meet_members;
	
	private EntitySet<place_schedule> _place_schedule;
	
	private EntitySet<user_schedule> _user_schedule;
	
	private EntityRef<@event> _event;
	
	private EntityRef<places> _places;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmeet_idChanging(int value);
    partial void Onmeet_idChanged();
    partial void Onmeet_titleChanging(string value);
    partial void Onmeet_titleChanged();
    partial void Onstart_timeChanging(string value);
    partial void Onstart_timeChanged();
    partial void Onend_timeChanging(string value);
    partial void Onend_timeChanged();
    partial void Onmeet_placeChanging(int value);
    partial void Onmeet_placeChanged();
    partial void OnnumofmembersChanging(System.Nullable<int> value);
    partial void OnnumofmembersChanged();
    partial void Onmeet_uploadfileChanging(string value);
    partial void Onmeet_uploadfileChanged();
    partial void Onmeet_recordfileChanging(string value);
    partial void Onmeet_recordfileChanged();
    partial void Onmeet_chattextChanging(string value);
    partial void Onmeet_chattextChanged();
    partial void Onmeet_noteChanging(string value);
    partial void Onmeet_noteChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void Onmeet_codeChanging(string value);
    partial void Onmeet_codeChanged();
    partial void OnconvenerChanging(string value);
    partial void OnconvenerChanged();
    #endregion
	
	public meet()
	{
		this._meet_members = new EntitySet<meet_members>(new Action<meet_members>(this.attach_meet_members), new Action<meet_members>(this.detach_meet_members));
		this._place_schedule = new EntitySet<place_schedule>(new Action<place_schedule>(this.attach_place_schedule), new Action<place_schedule>(this.detach_place_schedule));
		this._user_schedule = new EntitySet<user_schedule>(new Action<user_schedule>(this.attach_user_schedule), new Action<user_schedule>(this.detach_user_schedule));
		this._event = default(EntityRef<@event>);
		this._places = default(EntityRef<places>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meet_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int meet_id
	{
		get
		{
			return this._meet_id;
		}
		set
		{
			if ((this._meet_id != value))
			{
				if (this._event.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onmeet_idChanging(value);
				this.SendPropertyChanging();
				this._meet_id = value;
				this.SendPropertyChanged("meet_id");
				this.Onmeet_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meet_title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string meet_title
	{
		get
		{
			return this._meet_title;
		}
		set
		{
			if ((this._meet_title != value))
			{
				this.Onmeet_titleChanging(value);
				this.SendPropertyChanging();
				this._meet_title = value;
				this.SendPropertyChanged("meet_title");
				this.Onmeet_titleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_time", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string start_time
	{
		get
		{
			return this._start_time;
		}
		set
		{
			if ((this._start_time != value))
			{
				this.Onstart_timeChanging(value);
				this.SendPropertyChanging();
				this._start_time = value;
				this.SendPropertyChanged("start_time");
				this.Onstart_timeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_time", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string end_time
	{
		get
		{
			return this._end_time;
		}
		set
		{
			if ((this._end_time != value))
			{
				this.Onend_timeChanging(value);
				this.SendPropertyChanging();
				this._end_time = value;
				this.SendPropertyChanged("end_time");
				this.Onend_timeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meet_place", DbType="Int NOT NULL")]
	public int meet_place
	{
		get
		{
			return this._meet_place;
		}
		set
		{
			if ((this._meet_place != value))
			{
				if (this._places.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onmeet_placeChanging(value);
				this.SendPropertyChanging();
				this._meet_place = value;
				this.SendPropertyChanged("meet_place");
				this.Onmeet_placeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numofmembers", DbType="Int")]
	public System.Nullable<int> numofmembers
	{
		get
		{
			return this._numofmembers;
		}
		set
		{
			if ((this._numofmembers != value))
			{
				this.OnnumofmembersChanging(value);
				this.SendPropertyChanging();
				this._numofmembers = value;
				this.SendPropertyChanged("numofmembers");
				this.OnnumofmembersChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meet_uploadfile", DbType="NVarChar(MAX)")]
	public string meet_uploadfile
	{
		get
		{
			return this._meet_uploadfile;
		}
		set
		{
			if ((this._meet_uploadfile != value))
			{
				this.Onmeet_uploadfileChanging(value);
				this.SendPropertyChanging();
				this._meet_uploadfile = value;
				this.SendPropertyChanged("meet_uploadfile");
				this.Onmeet_uploadfileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meet_recordfile", DbType="NVarChar(MAX)")]
	public string meet_recordfile
	{
		get
		{
			return this._meet_recordfile;
		}
		set
		{
			if ((this._meet_recordfile != value))
			{
				this.Onmeet_recordfileChanging(value);
				this.SendPropertyChanging();
				this._meet_recordfile = value;
				this.SendPropertyChanged("meet_recordfile");
				this.Onmeet_recordfileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meet_chattext", DbType="NVarChar(MAX)")]
	public string meet_chattext
	{
		get
		{
			return this._meet_chattext;
		}
		set
		{
			if ((this._meet_chattext != value))
			{
				this.Onmeet_chattextChanging(value);
				this.SendPropertyChanging();
				this._meet_chattext = value;
				this.SendPropertyChanged("meet_chattext");
				this.Onmeet_chattextChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meet_note", DbType="NVarChar(MAX)")]
	public string meet_note
	{
		get
		{
			return this._meet_note;
		}
		set
		{
			if ((this._meet_note != value))
			{
				this.Onmeet_noteChanging(value);
				this.SendPropertyChanging();
				this._meet_note = value;
				this.SendPropertyChanged("meet_note");
				this.Onmeet_noteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
	public System.Nullable<int> status
	{
		get
		{
			return this._status;
		}
		set
		{
			if ((this._status != value))
			{
				this.OnstatusChanging(value);
				this.SendPropertyChanging();
				this._status = value;
				this.SendPropertyChanged("status");
				this.OnstatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meet_code", DbType="NVarChar(50)")]
	public string meet_code
	{
		get
		{
			return this._meet_code;
		}
		set
		{
			if ((this._meet_code != value))
			{
				this.Onmeet_codeChanging(value);
				this.SendPropertyChanging();
				this._meet_code = value;
				this.SendPropertyChanged("meet_code");
				this.Onmeet_codeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_convener", DbType="NVarChar(MAX)")]
	public string convener
	{
		get
		{
			return this._convener;
		}
		set
		{
			if ((this._convener != value))
			{
				this.OnconvenerChanging(value);
				this.SendPropertyChanging();
				this._convener = value;
				this.SendPropertyChanged("convener");
				this.OnconvenerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="meet_meet_members", Storage="_meet_members", ThisKey="meet_id", OtherKey="meet_id")]
	public EntitySet<meet_members> meet_members
	{
		get
		{
			return this._meet_members;
		}
		set
		{
			this._meet_members.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="meet_place_schedule", Storage="_place_schedule", ThisKey="meet_id", OtherKey="meet_id")]
	public EntitySet<place_schedule> place_schedule
	{
		get
		{
			return this._place_schedule;
		}
		set
		{
			this._place_schedule.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="meet_user_schedule", Storage="_user_schedule", ThisKey="meet_id", OtherKey="meet_id")]
	public EntitySet<user_schedule> user_schedule
	{
		get
		{
			return this._user_schedule;
		}
		set
		{
			this._user_schedule.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="event_meet", Storage="_event", ThisKey="meet_id", OtherKey="event_id", IsForeignKey=true)]
	public @event @event
	{
		get
		{
			return this._event.Entity;
		}
		set
		{
			@event previousValue = this._event.Entity;
			if (((previousValue != value) 
						|| (this._event.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._event.Entity = null;
					previousValue.meet = null;
				}
				this._event.Entity = value;
				if ((value != null))
				{
					value.meet = this;
					this._meet_id = value.event_id;
				}
				else
				{
					this._meet_id = default(int);
				}
				this.SendPropertyChanged("@event");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="places_meet", Storage="_places", ThisKey="meet_place", OtherKey="place_id", IsForeignKey=true)]
	public places places
	{
		get
		{
			return this._places.Entity;
		}
		set
		{
			places previousValue = this._places.Entity;
			if (((previousValue != value) 
						|| (this._places.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._places.Entity = null;
					previousValue.meet.Remove(this);
				}
				this._places.Entity = value;
				if ((value != null))
				{
					value.meet.Add(this);
					this._meet_place = value.place_id;
				}
				else
				{
					this._meet_place = default(int);
				}
				this.SendPropertyChanged("places");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_meet_members(meet_members entity)
	{
		this.SendPropertyChanging();
		entity.meet = this;
	}
	
	private void detach_meet_members(meet_members entity)
	{
		this.SendPropertyChanging();
		entity.meet = null;
	}
	
	private void attach_place_schedule(place_schedule entity)
	{
		this.SendPropertyChanging();
		entity.meet = this;
	}
	
	private void detach_place_schedule(place_schedule entity)
	{
		this.SendPropertyChanging();
		entity.meet = null;
	}
	
	private void attach_user_schedule(user_schedule entity)
	{
		this.SendPropertyChanging();
		entity.meet = this;
	}
	
	private void detach_user_schedule(user_schedule entity)
	{
		this.SendPropertyChanging();
		entity.meet = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.meet_members")]
public partial class meet_members : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _meet_id;
	
	private int _user_id;
	
	private string _meet_note;
	
	private EntityRef<meet> _meet;
	
	private EntityRef<users> _users;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmeet_idChanging(int value);
    partial void Onmeet_idChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onmeet_noteChanging(string value);
    partial void Onmeet_noteChanged();
    #endregion
	
	public meet_members()
	{
		this._meet = default(EntityRef<meet>);
		this._users = default(EntityRef<users>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meet_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int meet_id
	{
		get
		{
			return this._meet_id;
		}
		set
		{
			if ((this._meet_id != value))
			{
				if (this._meet.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onmeet_idChanging(value);
				this.SendPropertyChanging();
				this._meet_id = value;
				this.SendPropertyChanged("meet_id");
				this.Onmeet_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				if (this._users.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meet_note", DbType="NVarChar(MAX)")]
	public string meet_note
	{
		get
		{
			return this._meet_note;
		}
		set
		{
			if ((this._meet_note != value))
			{
				this.Onmeet_noteChanging(value);
				this.SendPropertyChanging();
				this._meet_note = value;
				this.SendPropertyChanged("meet_note");
				this.Onmeet_noteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="meet_meet_members", Storage="_meet", ThisKey="meet_id", OtherKey="meet_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public meet meet
	{
		get
		{
			return this._meet.Entity;
		}
		set
		{
			meet previousValue = this._meet.Entity;
			if (((previousValue != value) 
						|| (this._meet.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._meet.Entity = null;
					previousValue.meet_members.Remove(this);
				}
				this._meet.Entity = value;
				if ((value != null))
				{
					value.meet_members.Add(this);
					this._meet_id = value.meet_id;
				}
				else
				{
					this._meet_id = default(int);
				}
				this.SendPropertyChanged("meet");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="users_meet_members", Storage="_users", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
	public users users
	{
		get
		{
			return this._users.Entity;
		}
		set
		{
			users previousValue = this._users.Entity;
			if (((previousValue != value) 
						|| (this._users.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._users.Entity = null;
					previousValue.meet_members.Remove(this);
				}
				this._users.Entity = value;
				if ((value != null))
				{
					value.meet_members.Add(this);
					this._user_id = value.user_id;
				}
				else
				{
					this._user_id = default(int);
				}
				this.SendPropertyChanged("users");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.messages")]
public partial class messages : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _mid;
	
	private string _username;
	
	private string _message;
	
	private string _meet_code;
	
	private System.Nullable<System.DateTime> _created_at;
	
	private System.Nullable<System.DateTime> _updated_at;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmidChanging(int value);
    partial void OnmidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void Onmeet_codeChanging(string value);
    partial void Onmeet_codeChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    partial void Onupdated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onupdated_atChanged();
    #endregion
	
	public messages()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int mid
	{
		get
		{
			return this._mid;
		}
		set
		{
			if ((this._mid != value))
			{
				this.OnmidChanging(value);
				this.SendPropertyChanging();
				this._mid = value;
				this.SendPropertyChanged("mid");
				this.OnmidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(255)")]
	public string username
	{
		get
		{
			return this._username;
		}
		set
		{
			if ((this._username != value))
			{
				this.OnusernameChanging(value);
				this.SendPropertyChanging();
				this._username = value;
				this.SendPropertyChanged("username");
				this.OnusernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="NVarChar(255)")]
	public string message
	{
		get
		{
			return this._message;
		}
		set
		{
			if ((this._message != value))
			{
				this.OnmessageChanging(value);
				this.SendPropertyChanging();
				this._message = value;
				this.SendPropertyChanged("message");
				this.OnmessageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meet_code", DbType="NVarChar(255)")]
	public string meet_code
	{
		get
		{
			return this._meet_code;
		}
		set
		{
			if ((this._meet_code != value))
			{
				this.Onmeet_codeChanging(value);
				this.SendPropertyChanging();
				this._meet_code = value;
				this.SendPropertyChanged("meet_code");
				this.Onmeet_codeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
	public System.Nullable<System.DateTime> created_at
	{
		get
		{
			return this._created_at;
		}
		set
		{
			if ((this._created_at != value))
			{
				this.Oncreated_atChanging(value);
				this.SendPropertyChanging();
				this._created_at = value;
				this.SendPropertyChanged("created_at");
				this.Oncreated_atChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated_at", DbType="DateTime")]
	public System.Nullable<System.DateTime> updated_at
	{
		get
		{
			return this._updated_at;
		}
		set
		{
			if ((this._updated_at != value))
			{
				this.Onupdated_atChanging(value);
				this.SendPropertyChanging();
				this._updated_at = value;
				this.SendPropertyChanged("updated_at");
				this.Onupdated_atChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.place_schedule")]
public partial class place_schedule : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _place_id;
	
	private int _meet_id;
	
	private string _start_time;
	
	private string _end_time;
	
	private EntityRef<meet> _meet;
	
	private EntityRef<places> _places;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onplace_idChanging(int value);
    partial void Onplace_idChanged();
    partial void Onmeet_idChanging(int value);
    partial void Onmeet_idChanged();
    partial void Onstart_timeChanging(string value);
    partial void Onstart_timeChanged();
    partial void Onend_timeChanging(string value);
    partial void Onend_timeChanged();
    #endregion
	
	public place_schedule()
	{
		this._meet = default(EntityRef<meet>);
		this._places = default(EntityRef<places>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int place_id
	{
		get
		{
			return this._place_id;
		}
		set
		{
			if ((this._place_id != value))
			{
				if (this._places.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onplace_idChanging(value);
				this.SendPropertyChanging();
				this._place_id = value;
				this.SendPropertyChanged("place_id");
				this.Onplace_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meet_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int meet_id
	{
		get
		{
			return this._meet_id;
		}
		set
		{
			if ((this._meet_id != value))
			{
				if (this._meet.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onmeet_idChanging(value);
				this.SendPropertyChanging();
				this._meet_id = value;
				this.SendPropertyChanged("meet_id");
				this.Onmeet_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_time", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string start_time
	{
		get
		{
			return this._start_time;
		}
		set
		{
			if ((this._start_time != value))
			{
				this.Onstart_timeChanging(value);
				this.SendPropertyChanging();
				this._start_time = value;
				this.SendPropertyChanged("start_time");
				this.Onstart_timeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_time", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string end_time
	{
		get
		{
			return this._end_time;
		}
		set
		{
			if ((this._end_time != value))
			{
				this.Onend_timeChanging(value);
				this.SendPropertyChanging();
				this._end_time = value;
				this.SendPropertyChanged("end_time");
				this.Onend_timeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="meet_place_schedule", Storage="_meet", ThisKey="meet_id", OtherKey="meet_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public meet meet
	{
		get
		{
			return this._meet.Entity;
		}
		set
		{
			meet previousValue = this._meet.Entity;
			if (((previousValue != value) 
						|| (this._meet.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._meet.Entity = null;
					previousValue.place_schedule.Remove(this);
				}
				this._meet.Entity = value;
				if ((value != null))
				{
					value.place_schedule.Add(this);
					this._meet_id = value.meet_id;
				}
				else
				{
					this._meet_id = default(int);
				}
				this.SendPropertyChanged("meet");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="places_place_schedule", Storage="_places", ThisKey="place_id", OtherKey="place_id", IsForeignKey=true)]
	public places places
	{
		get
		{
			return this._places.Entity;
		}
		set
		{
			places previousValue = this._places.Entity;
			if (((previousValue != value) 
						|| (this._places.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._places.Entity = null;
					previousValue.place_schedule.Remove(this);
				}
				this._places.Entity = value;
				if ((value != null))
				{
					value.place_schedule.Add(this);
					this._place_id = value.place_id;
				}
				else
				{
					this._place_id = default(int);
				}
				this.SendPropertyChanged("places");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.places")]
public partial class places : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _place_id;
	
	private string _place_name;
	
	private string _place_location;
	
	private System.Nullable<int> _place_capacity;
	
	private string _organization;
	
	private EntitySet<meet> _meet;
	
	private EntitySet<place_schedule> _place_schedule;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onplace_idChanging(int value);
    partial void Onplace_idChanged();
    partial void Onplace_nameChanging(string value);
    partial void Onplace_nameChanged();
    partial void Onplace_locationChanging(string value);
    partial void Onplace_locationChanged();
    partial void Onplace_capacityChanging(System.Nullable<int> value);
    partial void Onplace_capacityChanged();
    partial void OnorganizationChanging(string value);
    partial void OnorganizationChanged();
    #endregion
	
	public places()
	{
		this._meet = new EntitySet<meet>(new Action<meet>(this.attach_meet), new Action<meet>(this.detach_meet));
		this._place_schedule = new EntitySet<place_schedule>(new Action<place_schedule>(this.attach_place_schedule), new Action<place_schedule>(this.detach_place_schedule));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int place_id
	{
		get
		{
			return this._place_id;
		}
		set
		{
			if ((this._place_id != value))
			{
				this.Onplace_idChanging(value);
				this.SendPropertyChanging();
				this._place_id = value;
				this.SendPropertyChanged("place_id");
				this.Onplace_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string place_name
	{
		get
		{
			return this._place_name;
		}
		set
		{
			if ((this._place_name != value))
			{
				this.Onplace_nameChanging(value);
				this.SendPropertyChanging();
				this._place_name = value;
				this.SendPropertyChanged("place_name");
				this.Onplace_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place_location", DbType="NVarChar(MAX)")]
	public string place_location
	{
		get
		{
			return this._place_location;
		}
		set
		{
			if ((this._place_location != value))
			{
				this.Onplace_locationChanging(value);
				this.SendPropertyChanging();
				this._place_location = value;
				this.SendPropertyChanged("place_location");
				this.Onplace_locationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place_capacity", DbType="Int")]
	public System.Nullable<int> place_capacity
	{
		get
		{
			return this._place_capacity;
		}
		set
		{
			if ((this._place_capacity != value))
			{
				this.Onplace_capacityChanging(value);
				this.SendPropertyChanging();
				this._place_capacity = value;
				this.SendPropertyChanged("place_capacity");
				this.Onplace_capacityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organization", DbType="NVarChar(MAX)")]
	public string organization
	{
		get
		{
			return this._organization;
		}
		set
		{
			if ((this._organization != value))
			{
				this.OnorganizationChanging(value);
				this.SendPropertyChanging();
				this._organization = value;
				this.SendPropertyChanged("organization");
				this.OnorganizationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="places_meet", Storage="_meet", ThisKey="place_id", OtherKey="meet_place")]
	public EntitySet<meet> meet
	{
		get
		{
			return this._meet;
		}
		set
		{
			this._meet.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="places_place_schedule", Storage="_place_schedule", ThisKey="place_id", OtherKey="place_id")]
	public EntitySet<place_schedule> place_schedule
	{
		get
		{
			return this._place_schedule;
		}
		set
		{
			this._place_schedule.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_meet(meet entity)
	{
		this.SendPropertyChanging();
		entity.places = this;
	}
	
	private void detach_meet(meet entity)
	{
		this.SendPropertyChanging();
		entity.places = null;
	}
	
	private void attach_place_schedule(place_schedule entity)
	{
		this.SendPropertyChanging();
		entity.places = this;
	}
	
	private void detach_place_schedule(place_schedule entity)
	{
		this.SendPropertyChanging();
		entity.places = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_schedule")]
public partial class user_schedule : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _user_id;
	
	private int _meet_id;
	
	private string _start_time;
	
	private string _end_time;
	
	private EntityRef<meet> _meet;
	
	private EntityRef<users> _users;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onmeet_idChanging(int value);
    partial void Onmeet_idChanged();
    partial void Onstart_timeChanging(string value);
    partial void Onstart_timeChanged();
    partial void Onend_timeChanging(string value);
    partial void Onend_timeChanged();
    #endregion
	
	public user_schedule()
	{
		this._meet = default(EntityRef<meet>);
		this._users = default(EntityRef<users>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				if (this._users.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meet_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int meet_id
	{
		get
		{
			return this._meet_id;
		}
		set
		{
			if ((this._meet_id != value))
			{
				if (this._meet.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onmeet_idChanging(value);
				this.SendPropertyChanging();
				this._meet_id = value;
				this.SendPropertyChanged("meet_id");
				this.Onmeet_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_time", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string start_time
	{
		get
		{
			return this._start_time;
		}
		set
		{
			if ((this._start_time != value))
			{
				this.Onstart_timeChanging(value);
				this.SendPropertyChanging();
				this._start_time = value;
				this.SendPropertyChanged("start_time");
				this.Onstart_timeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_time", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string end_time
	{
		get
		{
			return this._end_time;
		}
		set
		{
			if ((this._end_time != value))
			{
				this.Onend_timeChanging(value);
				this.SendPropertyChanging();
				this._end_time = value;
				this.SendPropertyChanged("end_time");
				this.Onend_timeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="meet_user_schedule", Storage="_meet", ThisKey="meet_id", OtherKey="meet_id", IsForeignKey=true)]
	public meet meet
	{
		get
		{
			return this._meet.Entity;
		}
		set
		{
			meet previousValue = this._meet.Entity;
			if (((previousValue != value) 
						|| (this._meet.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._meet.Entity = null;
					previousValue.user_schedule.Remove(this);
				}
				this._meet.Entity = value;
				if ((value != null))
				{
					value.user_schedule.Add(this);
					this._meet_id = value.meet_id;
				}
				else
				{
					this._meet_id = default(int);
				}
				this.SendPropertyChanged("meet");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="users_user_schedule", Storage="_users", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
	public users users
	{
		get
		{
			return this._users.Entity;
		}
		set
		{
			users previousValue = this._users.Entity;
			if (((previousValue != value) 
						|| (this._users.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._users.Entity = null;
					previousValue.user_schedule.Remove(this);
				}
				this._users.Entity = value;
				if ((value != null))
				{
					value.user_schedule.Add(this);
					this._user_id = value.user_id;
				}
				else
				{
					this._user_id = default(int);
				}
				this.SendPropertyChanged("users");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
